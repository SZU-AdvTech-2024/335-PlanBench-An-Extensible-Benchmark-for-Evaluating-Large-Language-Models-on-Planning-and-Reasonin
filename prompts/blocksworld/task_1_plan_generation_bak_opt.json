{
    "task": "task_1_plan_generation",
    "prompt_type": "oneshot",
    "domain": "blocksworld",
    "instances": [
        {
            "instance_id": 2,
            "example_instance_ids": [
                1
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 3,
            "example_instance_ids": [
                2
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(unstack d a)\n(stack d b)\n(pick-up a)\n(stack a c)\n(unstack d b)\n(stack d a)\n"
        },
        {
            "instance_id": 4,
            "example_instance_ids": [
                3
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a c)\n(put-down a)\n(unstack c b)\n(put-down c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 5,
            "example_instance_ids": [
                4
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 6,
            "example_instance_ids": [
                5
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a c)\n(stack a d)\n(unstack c b)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 7,
            "example_instance_ids": [
                6
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(unstack b c)\n(put-down b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 8,
            "example_instance_ids": [
                7
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(stack b a)\n(pick-up d)\n(stack d c)\n(unstack b a)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 9,
            "example_instance_ids": [
                8
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 10,
            "example_instance_ids": [
                9
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b c)\n(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 11,
            "example_instance_ids": [
                10
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d a)\n(unstack b c)\n(stack b d)\n"
        },
        {
            "instance_id": 12,
            "example_instance_ids": [
                11
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 13,
            "example_instance_ids": [
                12
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 14,
            "example_instance_ids": [
                13
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(unstack c d)\n(stack c b)\n(pick-up d)\n(stack d a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 15,
            "example_instance_ids": [
                14
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up a)\n(stack a c)\n(unstack b d)\n(stack b a)\n"
        },
        {
            "instance_id": 16,
            "example_instance_ids": [
                15
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 17,
            "example_instance_ids": [
                16
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 18,
            "example_instance_ids": [
                17
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(put-down b)\n(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 19,
            "example_instance_ids": [
                18
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 20,
            "example_instance_ids": [
                19
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack b d)\n(stack b a)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 21,
            "example_instance_ids": [
                20
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 22,
            "example_instance_ids": [
                21
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d b)\n(unstack c a)\n(put-down c)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 23,
            "example_instance_ids": [
                22
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(stack d a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 24,
            "example_instance_ids": [
                23
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 25,
            "example_instance_ids": [
                24
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(stack b d)\n"
        },
        {
            "instance_id": 26,
            "example_instance_ids": [
                25
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a b)\n(unstack c d)\n(stack c a)\n"
        },
        {
            "instance_id": 27,
            "example_instance_ids": [
                26
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a c)\n(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 28,
            "example_instance_ids": [
                27
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(pick-up c)\n(stack c a)\n(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 29,
            "example_instance_ids": [
                28
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b a)\n(unstack c d)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 30,
            "example_instance_ids": [
                29
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d c)\n(unstack b a)\n(stack b d)\n"
        },
        {
            "instance_id": 31,
            "example_instance_ids": [
                30
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b a)\n"
        },
        {
            "instance_id": 32,
            "example_instance_ids": [
                31
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 33,
            "example_instance_ids": [
                32
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(put-down a)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 34,
            "example_instance_ids": [
                33
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 35,
            "example_instance_ids": [
                34
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 36,
            "example_instance_ids": [
                35
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b a)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 37,
            "example_instance_ids": [
                36
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b c)\n(unstack d a)\n(put-down d)\n(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 38,
            "example_instance_ids": [
                37
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(unstack b c)\n(put-down b)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 39,
            "example_instance_ids": [
                38
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(put-down c)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 40,
            "example_instance_ids": [
                39
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 41,
            "example_instance_ids": [
                40
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(stack b d)\n"
        },
        {
            "instance_id": 42,
            "example_instance_ids": [
                41
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(stack b c)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 43,
            "example_instance_ids": [
                42
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(stack a d)\n(pick-up c)\n(stack c b)\n(unstack a d)\n(stack a c)\n"
        },
        {
            "instance_id": 44,
            "example_instance_ids": [
                43
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(put-down c)\n(unstack b d)\n(stack b c)\n(pick-up a)\n(stack a d)\n(unstack b c)\n(stack b a)\n"
        },
        {
            "instance_id": 45,
            "example_instance_ids": [
                44
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 46,
            "example_instance_ids": [
                45
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b c)\n"
        },
        {
            "instance_id": 47,
            "example_instance_ids": [
                46
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d c)\n(unstack a b)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 48,
            "example_instance_ids": [
                47
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(unstack a d)\n(stack a b)\n"
        },
        {
            "instance_id": 49,
            "example_instance_ids": [
                48
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(stack c a)\n(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 50,
            "example_instance_ids": [
                49
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c d)\n(unstack b a)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 51,
            "example_instance_ids": [
                50
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 52,
            "example_instance_ids": [
                51
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack c a)\n(stack c d)\n(pick-up a)\n(stack a b)\n(unstack c d)\n(stack c a)\n"
        },
        {
            "instance_id": 53,
            "example_instance_ids": [
                52
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(stack a d)\n(unstack b c)\n(put-down b)\n(unstack a d)\n(stack a c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 54,
            "example_instance_ids": [
                53
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 55,
            "example_instance_ids": [
                54
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(put-down b)\n(unstack c a)\n(stack c d)\n(pick-up a)\n(stack a b)\n(unstack c d)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 56,
            "example_instance_ids": [
                55
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a c)\n(pick-up b)\n(stack b d)\n(unstack a c)\n(stack a b)\n"
        },
        {
            "instance_id": 57,
            "example_instance_ids": [
                56
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b d)\n(put-down b)\n(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 58,
            "example_instance_ids": [
                57
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d a)\n"
        },
        {
            "instance_id": 59,
            "example_instance_ids": [
                58
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(stack b c)\n(pick-up d)\n(stack d a)\n(unstack b c)\n(stack b d)\n"
        },
        {
            "instance_id": 60,
            "example_instance_ids": [
                59
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 61,
            "example_instance_ids": [
                60
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 62,
            "example_instance_ids": [
                61
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 63,
            "example_instance_ids": [
                62
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 64,
            "example_instance_ids": [
                63
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 65,
            "example_instance_ids": [
                64
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(put-down d)\n(pick-up b)\n(stack b d)\n(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 66,
            "example_instance_ids": [
                65
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(stack c a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 67,
            "example_instance_ids": [
                66
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 68,
            "example_instance_ids": [
                67
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(unstack b c)\n(stack b d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 69,
            "example_instance_ids": [
                68
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(stack b c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 70,
            "example_instance_ids": [
                69
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(stack c d)\n"
        },
        {
            "instance_id": 71,
            "example_instance_ids": [
                70
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 72,
            "example_instance_ids": [
                71
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 73,
            "example_instance_ids": [
                72
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 74,
            "example_instance_ids": [
                73
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(stack b a)\n"
        },
        {
            "instance_id": 75,
            "example_instance_ids": [
                74
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(put-down c)\n(unstack a b)\n(stack a c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 76,
            "example_instance_ids": [
                75
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(pick-up b)\n(stack b a)\n(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 77,
            "example_instance_ids": [
                76
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(put-down c)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 78,
            "example_instance_ids": [
                77
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(stack c a)\n(unstack d b)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 79,
            "example_instance_ids": [
                78
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 80,
            "example_instance_ids": [
                79
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(put-down a)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 81,
            "example_instance_ids": [
                80
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(unstack b a)\n(put-down b)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 82,
            "example_instance_ids": [
                81
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 83,
            "example_instance_ids": [
                82
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(stack c d)\n(pick-up a)\n(stack a b)\n(unstack c d)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 84,
            "example_instance_ids": [
                83
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up a)\n(stack a b)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 85,
            "example_instance_ids": [
                84
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c d)\n(unstack a b)\n(stack a c)\n"
        },
        {
            "instance_id": 86,
            "example_instance_ids": [
                85
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 87,
            "example_instance_ids": [
                86
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(stack a b)\n(unstack c d)\n(put-down c)\n(unstack a b)\n(stack a c)\n(pick-up d)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 88,
            "example_instance_ids": [
                87
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(unstack b c)\n(put-down b)\n(unstack d a)\n(stack d c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 89,
            "example_instance_ids": [
                88
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack b c)\n(stack b a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 90,
            "example_instance_ids": [
                89
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 91,
            "example_instance_ids": [
                90
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a d)\n(stack a b)\n(unstack d c)\n(put-down d)\n(unstack a b)\n(stack a d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 92,
            "example_instance_ids": [
                91
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(put-down c)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 93,
            "example_instance_ids": [
                92
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(pick-up c)\n(stack c a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 94,
            "example_instance_ids": [
                93
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(put-down c)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 95,
            "example_instance_ids": [
                94
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(stack d b)\n(unstack a c)\n(put-down a)\n(unstack d b)\n(stack d c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 96,
            "example_instance_ids": [
                95
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d a)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 97,
            "example_instance_ids": [
                96
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a b)\n(unstack c d)\n(put-down c)\n(unstack a b)\n(stack a c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 98,
            "example_instance_ids": [
                97
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(stack c a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 99,
            "example_instance_ids": [
                98
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a c)\n(unstack d b)\n(put-down d)\n(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 100,
            "example_instance_ids": [
                99
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 101,
            "example_instance_ids": [
                100
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(put-down a)\n(unstack b d)\n(stack b a)\n(pick-up d)\n(stack d c)\n(unstack b a)\n(stack b d)\n"
        },
        {
            "instance_id": 102,
            "example_instance_ids": [
                101
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 103,
            "example_instance_ids": [
                102
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(pick-up c)\n(stack c d)\n(unstack b a)\n(stack b c)\n"
        },
        {
            "instance_id": 104,
            "example_instance_ids": [
                103
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 105,
            "example_instance_ids": [
                104
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(stack b c)\n(unstack a d)\n(put-down a)\n(unstack b c)\n(stack b d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 106,
            "example_instance_ids": [
                105
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 107,
            "example_instance_ids": [
                106
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack b c)\n(stack b d)\n(pick-up a)\n(stack a c)\n(unstack b d)\n(stack b a)\n"
        },
        {
            "instance_id": 108,
            "example_instance_ids": [
                107
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 109,
            "example_instance_ids": [
                108
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 110,
            "example_instance_ids": [
                109
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 111,
            "example_instance_ids": [
                110
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 112,
            "example_instance_ids": [
                111
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 113,
            "example_instance_ids": [
                112
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a d)\n(put-down a)\n(unstack d c)\n(stack d a)\n(pick-up c)\n(stack c b)\n(unstack d a)\n(stack d c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 114,
            "example_instance_ids": [
                113
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(stack d c)\n(unstack b a)\n(put-down b)\n(unstack d c)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 115,
            "example_instance_ids": [
                114
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 116,
            "example_instance_ids": [
                115
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(pick-up d)\n(stack d c)\n(unstack a b)\n(put-down a)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 117,
            "example_instance_ids": [
                116
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(stack b d)\n(pick-up c)\n(stack c a)\n(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 118,
            "example_instance_ids": [
                117
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b d)\n(unstack c a)\n(stack c b)\n"
        },
        {
            "instance_id": 119,
            "example_instance_ids": [
                118
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(unstack a d)\n(stack a c)\n(pick-up d)\n(stack d b)\n(unstack a c)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 120,
            "example_instance_ids": [
                119
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(stack a c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 121,
            "example_instance_ids": [
                120
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 122,
            "example_instance_ids": [
                121
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d b)\n(unstack c a)\n(put-down c)\n(unstack d b)\n(stack d c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 123,
            "example_instance_ids": [
                122
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a c)\n"
        },
        {
            "instance_id": 124,
            "example_instance_ids": [
                123
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 125,
            "example_instance_ids": [
                124
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(stack a d)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 126,
            "example_instance_ids": [
                125
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 127,
            "example_instance_ids": [
                126
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up d)\n(stack d a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 128,
            "example_instance_ids": [
                127
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack a b)\n(stack a d)\n(pick-up c)\n(stack c a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 129,
            "example_instance_ids": [
                128
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 130,
            "example_instance_ids": [
                129
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack b a)\n(stack b c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 131,
            "example_instance_ids": [
                130
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(stack c a)\n(unstack d b)\n(put-down d)\n(unstack c a)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 132,
            "example_instance_ids": [
                131
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 133,
            "example_instance_ids": [
                132
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(stack a d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 134,
            "example_instance_ids": [
                133
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b d)\n(unstack c a)\n(put-down c)\n(unstack b d)\n(stack b a)\n"
        },
        {
            "instance_id": 135,
            "example_instance_ids": [
                134
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 136,
            "example_instance_ids": [
                135
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack a b)\n(stack a d)\n(pick-up c)\n(stack c b)\n(unstack a d)\n(stack a c)\n"
        },
        {
            "instance_id": 137,
            "example_instance_ids": [
                136
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 138,
            "example_instance_ids": [
                137
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 139,
            "example_instance_ids": [
                138
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a d)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 140,
            "example_instance_ids": [
                139
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 141,
            "example_instance_ids": [
                140
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 142,
            "example_instance_ids": [
                141
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 143,
            "example_instance_ids": [
                142
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 144,
            "example_instance_ids": [
                143
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 145,
            "example_instance_ids": [
                144
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(stack c b)\n(unstack a d)\n(put-down a)\n(unstack c b)\n(stack c d)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 146,
            "example_instance_ids": [
                145
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b c)\n(unstack d a)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 147,
            "example_instance_ids": [
                146
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(pick-up d)\n(stack d a)\n(unstack b c)\n(stack b d)\n"
        },
        {
            "instance_id": 148,
            "example_instance_ids": [
                147
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(put-down b)\n(unstack a c)\n(stack a d)\n(pick-up c)\n(stack c b)\n(unstack a d)\n(stack a c)\n"
        },
        {
            "instance_id": 149,
            "example_instance_ids": [
                148
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 150,
            "example_instance_ids": [
                149
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 151,
            "example_instance_ids": [
                150
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d a)\n(unstack c b)\n(put-down c)\n(unstack d a)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 152,
            "example_instance_ids": [
                151
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(put-down b)\n(unstack c a)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 153,
            "example_instance_ids": [
                152
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 154,
            "example_instance_ids": [
                153
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(stack b c)\n(unstack a d)\n(put-down a)\n(unstack b c)\n(stack b d)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 155,
            "example_instance_ids": [
                154
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b d)\n(pick-up a)\n(stack a c)\n(unstack b d)\n(stack b a)\n"
        },
        {
            "instance_id": 156,
            "example_instance_ids": [
                155
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up b)\n(stack b a)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 157,
            "example_instance_ids": [
                156
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a c)\n(unstack d b)\n(put-down d)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 158,
            "example_instance_ids": [
                157
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 159,
            "example_instance_ids": [
                158
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 160,
            "example_instance_ids": [
                159
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 161,
            "example_instance_ids": [
                160
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 162,
            "example_instance_ids": [
                161
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 163,
            "example_instance_ids": [
                162
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 164,
            "example_instance_ids": [
                163
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 165,
            "example_instance_ids": [
                164
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(stack c d)\n(unstack a b)\n(put-down a)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 166,
            "example_instance_ids": [
                165
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(stack c b)\n(pick-up a)\n(stack a d)\n(unstack c b)\n(stack c a)\n"
        },
        {
            "instance_id": 167,
            "example_instance_ids": [
                166
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(put-down d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 168,
            "example_instance_ids": [
                167
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(stack a d)\n(pick-up c)\n(stack c b)\n(unstack a d)\n(stack a c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 169,
            "example_instance_ids": [
                168
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 170,
            "example_instance_ids": [
                169
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 171,
            "example_instance_ids": [
                170
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(unstack b c)\n(put-down b)\n(unstack d a)\n(stack d b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 172,
            "example_instance_ids": [
                171
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a b)\n(unstack c d)\n(put-down c)\n(unstack a b)\n(stack a d)\n"
        },
        {
            "instance_id": 173,
            "example_instance_ids": [
                172
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 174,
            "example_instance_ids": [
                173
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(stack d c)\n(unstack a b)\n(put-down a)\n(unstack d c)\n(stack d a)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 175,
            "example_instance_ids": [
                174
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack d b)\n(put-down d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 176,
            "example_instance_ids": [
                175
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(stack c b)\n"
        },
        {
            "instance_id": 177,
            "example_instance_ids": [
                176
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack a b)\n(stack a c)\n(pick-up d)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 178,
            "example_instance_ids": [
                177
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 179,
            "example_instance_ids": [
                178
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 180,
            "example_instance_ids": [
                179
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(put-down d)\n(pick-up c)\n(stack c d)\n(unstack a b)\n(put-down a)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 181,
            "example_instance_ids": [
                180
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 182,
            "example_instance_ids": [
                181
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(stack b d)\n(unstack a c)\n(put-down a)\n(unstack b d)\n(stack b c)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 183,
            "example_instance_ids": [
                182
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 184,
            "example_instance_ids": [
                183
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 185,
            "example_instance_ids": [
                184
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 186,
            "example_instance_ids": [
                185
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(unstack d a)\n(stack d b)\n"
        },
        {
            "instance_id": 187,
            "example_instance_ids": [
                186
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 188,
            "example_instance_ids": [
                187
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(put-down c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 189,
            "example_instance_ids": [
                188
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(stack b c)\n(unstack a d)\n(put-down a)\n(unstack b c)\n(stack b d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 190,
            "example_instance_ids": [
                189
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a b)\n(unstack d c)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 191,
            "example_instance_ids": [
                190
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 192,
            "example_instance_ids": [
                191
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d a)\n"
        },
        {
            "instance_id": 193,
            "example_instance_ids": [
                192
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(stack b d)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 194,
            "example_instance_ids": [
                193
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(stack b d)\n(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 195,
            "example_instance_ids": [
                194
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(unstack b c)\n(stack b d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 196,
            "example_instance_ids": [
                195
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d c)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 197,
            "example_instance_ids": [
                196
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b d)\n(put-down b)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 198,
            "example_instance_ids": [
                197
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 199,
            "example_instance_ids": [
                198
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(stack d b)\n(unstack a c)\n(put-down a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 200,
            "example_instance_ids": [
                199
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 201,
            "example_instance_ids": [
                200
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 202,
            "example_instance_ids": [
                201
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(stack b c)\n"
        },
        {
            "instance_id": 203,
            "example_instance_ids": [
                202
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 204,
            "example_instance_ids": [
                203
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a b)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 205,
            "example_instance_ids": [
                204
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(unstack d b)\n(stack d c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 206,
            "example_instance_ids": [
                205
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a d)\n(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 207,
            "example_instance_ids": [
                206
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 208,
            "example_instance_ids": [
                207
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(put-down c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 209,
            "example_instance_ids": [
                208
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 210,
            "example_instance_ids": [
                209
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 211,
            "example_instance_ids": [
                210
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(stack c a)\n(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 212,
            "example_instance_ids": [
                211
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up d)\n(stack d c)\n(unstack b a)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 213,
            "example_instance_ids": [
                212
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b d)\n(unstack c a)\n(put-down c)\n(unstack b d)\n(stack b a)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 214,
            "example_instance_ids": [
                213
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 215,
            "example_instance_ids": [
                214
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 216,
            "example_instance_ids": [
                215
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 217,
            "example_instance_ids": [
                216
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(stack c a)\n(pick-up d)\n(stack d b)\n(unstack c a)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 218,
            "example_instance_ids": [
                217
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 219,
            "example_instance_ids": [
                218
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(stack b d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 220,
            "example_instance_ids": [
                219
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(stack b d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 221,
            "example_instance_ids": [
                220
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(stack d a)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 222,
            "example_instance_ids": [
                221
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack a c)\n(stack a d)\n(pick-up b)\n(stack b c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 223,
            "example_instance_ids": [
                222
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 224,
            "example_instance_ids": [
                223
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 225,
            "example_instance_ids": [
                224
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(stack c d)\n"
        },
        {
            "instance_id": 226,
            "example_instance_ids": [
                225
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a c)\n(put-down a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 227,
            "example_instance_ids": [
                226
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 228,
            "example_instance_ids": [
                227
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack c a)\n(stack c d)\n"
        },
        {
            "instance_id": 229,
            "example_instance_ids": [
                228
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(unstack b c)\n(put-down b)\n(unstack d a)\n(stack d c)\n"
        },
        {
            "instance_id": 230,
            "example_instance_ids": [
                229
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(stack d c)\n(unstack b a)\n(put-down b)\n(unstack d c)\n(stack d a)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 231,
            "example_instance_ids": [
                230
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(stack d c)\n(unstack a b)\n(put-down a)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 232,
            "example_instance_ids": [
                231
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(pick-up c)\n(stack c a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 233,
            "example_instance_ids": [
                232
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 234,
            "example_instance_ids": [
                233
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 235,
            "example_instance_ids": [
                234
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 236,
            "example_instance_ids": [
                235
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 237,
            "example_instance_ids": [
                236
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a b)\n(unstack c d)\n(stack c a)\n"
        },
        {
            "instance_id": 238,
            "example_instance_ids": [
                237
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(stack d b)\n(unstack a c)\n(put-down a)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 239,
            "example_instance_ids": [
                238
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(stack c d)\n(pick-up a)\n(stack a b)\n(unstack c d)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 240,
            "example_instance_ids": [
                239
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 241,
            "example_instance_ids": [
                240
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack a d)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 242,
            "example_instance_ids": [
                241
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a d)\n(put-down a)\n(unstack d c)\n(put-down d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 243,
            "example_instance_ids": [
                242
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(stack a d)\n(pick-up c)\n(stack c b)\n(unstack a d)\n(stack a c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 244,
            "example_instance_ids": [
                243
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(stack d c)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a b)\n(unstack d c)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 245,
            "example_instance_ids": [
                244
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack d a)\n(stack d c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 246,
            "example_instance_ids": [
                245
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(stack a c)\n(pick-up b)\n(stack b d)\n(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 247,
            "example_instance_ids": [
                246
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 248,
            "example_instance_ids": [
                247
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 249,
            "example_instance_ids": [
                248
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack c b)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 250,
            "example_instance_ids": [
                249
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(stack c b)\n(unstack d a)\n(put-down d)\n(unstack c b)\n(stack c a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 251,
            "example_instance_ids": [
                250
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 252,
            "example_instance_ids": [
                251
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(stack c a)\n"
        },
        {
            "instance_id": 253,
            "example_instance_ids": [
                252
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 254,
            "example_instance_ids": [
                253
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(stack a c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 255,
            "example_instance_ids": [
                254
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack c d)\n(stack c b)\n(pick-up d)\n(stack d a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 256,
            "example_instance_ids": [
                255
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack c d)\n(stack c a)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 257,
            "example_instance_ids": [
                256
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 258,
            "example_instance_ids": [
                257
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(stack d b)\n(unstack a c)\n(put-down a)\n(unstack d b)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 259,
            "example_instance_ids": [
                258
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 260,
            "example_instance_ids": [
                259
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 261,
            "example_instance_ids": [
                260
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 262,
            "example_instance_ids": [
                261
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 263,
            "example_instance_ids": [
                262
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 264,
            "example_instance_ids": [
                263
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d b)\n(pick-up a)\n(stack a c)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 265,
            "example_instance_ids": [
                264
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a d)\n(stack a b)\n"
        },
        {
            "instance_id": 266,
            "example_instance_ids": [
                265
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(stack a d)\n(pick-up b)\n(stack b c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 267,
            "example_instance_ids": [
                266
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 268,
            "example_instance_ids": [
                267
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b d)\n(stack b a)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 269,
            "example_instance_ids": [
                268
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 270,
            "example_instance_ids": [
                269
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(unstack d b)\n(stack d c)\n(pick-up a)\n(stack a b)\n(unstack d c)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 271,
            "example_instance_ids": [
                270
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 272,
            "example_instance_ids": [
                271
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 273,
            "example_instance_ids": [
                272
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a b)\n"
        },
        {
            "instance_id": 274,
            "example_instance_ids": [
                273
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(stack d c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 275,
            "example_instance_ids": [
                274
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b a)\n(pick-up c)\n(stack c d)\n(unstack b a)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 276,
            "example_instance_ids": [
                275
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 277,
            "example_instance_ids": [
                276
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 278,
            "example_instance_ids": [
                277
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b c)\n(pick-up a)\n(stack a d)\n(unstack b c)\n(stack b a)\n"
        },
        {
            "instance_id": 279,
            "example_instance_ids": [
                278
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack a b)\n(put-down a)\n(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 280,
            "example_instance_ids": [
                279
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 281,
            "example_instance_ids": [
                280
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(pick-up d)\n(stack d b)\n(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 282,
            "example_instance_ids": [
                281
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 283,
            "example_instance_ids": [
                282
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(unstack c d)\n(stack c a)\n(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 284,
            "example_instance_ids": [
                283
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 285,
            "example_instance_ids": [
                284
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 286,
            "example_instance_ids": [
                285
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 287,
            "example_instance_ids": [
                286
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d a)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 288,
            "example_instance_ids": [
                287
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 289,
            "example_instance_ids": [
                288
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack b c)\n(stack b d)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 290,
            "example_instance_ids": [
                289
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 291,
            "example_instance_ids": [
                290
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 292,
            "example_instance_ids": [
                291
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 293,
            "example_instance_ids": [
                292
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d b)\n(unstack c a)\n(stack c d)\n"
        },
        {
            "instance_id": 294,
            "example_instance_ids": [
                293
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(pick-up c)\n(stack c a)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 295,
            "example_instance_ids": [
                294
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack c a)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 296,
            "example_instance_ids": [
                295
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 297,
            "example_instance_ids": [
                296
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 298,
            "example_instance_ids": [
                297
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(stack c b)\n(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d a)\n(unstack c b)\n(stack c d)\n"
        },
        {
            "instance_id": 299,
            "example_instance_ids": [
                298
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(put-down c)\n(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 300,
            "example_instance_ids": [
                299
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d b)\n(unstack c a)\n(stack c d)\n"
        },
        {
            "instance_id": 301,
            "example_instance_ids": [
                300
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 302,
            "example_instance_ids": [
                301
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a b)\n(put-down a)\n(pick-up c)\n(stack c a)\n(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 303,
            "example_instance_ids": [
                302
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(stack c b)\n(pick-up a)\n(stack a d)\n(unstack c b)\n(stack c a)\n"
        },
        {
            "instance_id": 304,
            "example_instance_ids": [
                303
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(put-down c)\n(pick-up b)\n(stack b c)\n(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 305,
            "example_instance_ids": [
                304
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 306,
            "example_instance_ids": [
                305
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 307,
            "example_instance_ids": [
                306
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(stack c a)\n(unstack d b)\n(put-down d)\n(unstack c a)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 308,
            "example_instance_ids": [
                307
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c d)\n(unstack b a)\n(stack b c)\n"
        },
        {
            "instance_id": 309,
            "example_instance_ids": [
                308
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(put-down d)\n(unstack c b)\n(stack c a)\n(pick-up b)\n(stack b d)\n(unstack c a)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 310,
            "example_instance_ids": [
                309
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a c)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 311,
            "example_instance_ids": [
                310
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c b)\n(unstack d a)\n(stack d c)\n"
        },
        {
            "instance_id": 312,
            "example_instance_ids": [
                311
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 313,
            "example_instance_ids": [
                312
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a b)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 314,
            "example_instance_ids": [
                313
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 315,
            "example_instance_ids": [
                314
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack d b)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 316,
            "example_instance_ids": [
                315
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 317,
            "example_instance_ids": [
                316
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 318,
            "example_instance_ids": [
                317
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(stack d c)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 319,
            "example_instance_ids": [
                318
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack d c)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 320,
            "example_instance_ids": [
                319
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c d)\n(unstack a b)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 321,
            "example_instance_ids": [
                320
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 322,
            "example_instance_ids": [
                321
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d c)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 323,
            "example_instance_ids": [
                322
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(unstack d a)\n(put-down d)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 324,
            "example_instance_ids": [
                323
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 325,
            "example_instance_ids": [
                324
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 326,
            "example_instance_ids": [
                325
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 327,
            "example_instance_ids": [
                326
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 328,
            "example_instance_ids": [
                327
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(stack a c)\n(unstack b d)\n(put-down b)\n(unstack a c)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 329,
            "example_instance_ids": [
                328
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d a)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 330,
            "example_instance_ids": [
                329
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(stack d b)\n(unstack a c)\n(put-down a)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 331,
            "example_instance_ids": [
                330
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack a c)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 332,
            "example_instance_ids": [
                331
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b a)\n(put-down b)\n(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 333,
            "example_instance_ids": [
                332
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b c)\n(unstack d a)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 334,
            "example_instance_ids": [
                333
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(stack b d)\n(unstack c a)\n(stack c b)\n"
        },
        {
            "instance_id": 335,
            "example_instance_ids": [
                334
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 336,
            "example_instance_ids": [
                335
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a b)\n(pick-up c)\n(stack c d)\n(unstack a b)\n(stack a c)\n"
        },
        {
            "instance_id": 337,
            "example_instance_ids": [
                336
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 338,
            "example_instance_ids": [
                337
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a d)\n(put-down a)\n(unstack d c)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 339,
            "example_instance_ids": [
                338
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a c)\n(put-down a)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 340,
            "example_instance_ids": [
                339
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(stack c d)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 341,
            "example_instance_ids": [
                340
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a b)\n(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 342,
            "example_instance_ids": [
                341
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a c)\n(stack a d)\n(unstack c b)\n(put-down c)\n(unstack a d)\n(stack a c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 343,
            "example_instance_ids": [
                342
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a d)\n(put-down a)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 344,
            "example_instance_ids": [
                343
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack b d)\n(stack b c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 345,
            "example_instance_ids": [
                344
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(put-down a)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 346,
            "example_instance_ids": [
                345
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 347,
            "example_instance_ids": [
                346
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a d)\n(stack a b)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 348,
            "example_instance_ids": [
                347
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 349,
            "example_instance_ids": [
                348
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(put-down b)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 350,
            "example_instance_ids": [
                349
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 351,
            "example_instance_ids": [
                350
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(put-down a)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 352,
            "example_instance_ids": [
                351
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 353,
            "example_instance_ids": [
                352
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 354,
            "example_instance_ids": [
                353
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(stack d a)\n(unstack c b)\n(put-down c)\n(unstack d a)\n(stack d c)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 355,
            "example_instance_ids": [
                354
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 356,
            "example_instance_ids": [
                355
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a c)\n(stack a d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 357,
            "example_instance_ids": [
                356
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 358,
            "example_instance_ids": [
                357
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d c)\n(put-down d)\n(unstack c b)\n(put-down c)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 359,
            "example_instance_ids": [
                358
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(stack c a)\n(unstack b d)\n(put-down b)\n(unstack c a)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 360,
            "example_instance_ids": [
                359
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack d c)\n(put-down d)\n(pick-up b)\n(stack b d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 361,
            "example_instance_ids": [
                360
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(stack d c)\n(unstack b a)\n(put-down b)\n(unstack d c)\n(stack d b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 362,
            "example_instance_ids": [
                361
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a b)\n"
        },
        {
            "instance_id": 363,
            "example_instance_ids": [
                362
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b c)\n(unstack d a)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 364,
            "example_instance_ids": [
                363
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 365,
            "example_instance_ids": [
                364
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 366,
            "example_instance_ids": [
                365
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 367,
            "example_instance_ids": [
                366
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 368,
            "example_instance_ids": [
                367
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 369,
            "example_instance_ids": [
                368
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 370,
            "example_instance_ids": [
                369
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(stack d c)\n(unstack a b)\n(put-down a)\n(unstack d c)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 371,
            "example_instance_ids": [
                370
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(pick-up a)\n(stack a b)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 372,
            "example_instance_ids": [
                371
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the red block\nstack the red block on top of the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 373,
            "example_instance_ids": [
                372
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(pick-up b)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 374,
            "example_instance_ids": [
                373
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the blue block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack d a)\n(stack d b)\n(pick-up c)\n(stack c a)\n(unstack d b)\n(stack d c)\n"
        },
        {
            "instance_id": 375,
            "example_instance_ids": [
                374
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(stack b a)\n(unstack d c)\n(put-down d)\n(unstack b a)\n(stack b c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 376,
            "example_instance_ids": [
                375
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(stack d c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 377,
            "example_instance_ids": [
                376
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(put-down c)\n(unstack b d)\n(stack b a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 378,
            "example_instance_ids": [
                377
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a d)\n"
        },
        {
            "instance_id": 379,
            "example_instance_ids": [
                378
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d b)\n(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 380,
            "example_instance_ids": [
                379
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(unstack b a)\n(put-down b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 381,
            "example_instance_ids": [
                380
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 382,
            "example_instance_ids": [
                381
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(stack c b)\n(unstack a d)\n(put-down a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 383,
            "example_instance_ids": [
                382
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(stack a d)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c b)\n(unstack a d)\n(stack a c)\n"
        },
        {
            "instance_id": 384,
            "example_instance_ids": [
                383
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(pick-up c)\n(stack c b)\n(unstack d a)\n(stack d c)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 385,
            "example_instance_ids": [
                384
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the blue block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 386,
            "example_instance_ids": [
                385
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(unstack b a)\n(stack b d)\n(pick-up a)\n(stack a c)\n(unstack b d)\n(stack b a)\n"
        },
        {
            "instance_id": 387,
            "example_instance_ids": [
                386
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(put-down c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 388,
            "example_instance_ids": [
                387
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(stack d c)\n"
        },
        {
            "instance_id": 389,
            "example_instance_ids": [
                388
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(stack b a)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 390,
            "example_instance_ids": [
                389
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(stack b d)\n(pick-up a)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 391,
            "example_instance_ids": [
                390
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(pick-up c)\n(stack c b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 392,
            "example_instance_ids": [
                391
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d c)\n(unstack b a)\n(put-down b)\n(unstack d c)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 393,
            "example_instance_ids": [
                392
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(unstack d c)\n(stack d a)\n(pick-up c)\n(stack c b)\n(unstack d a)\n(stack d c)\n"
        },
        {
            "instance_id": 394,
            "example_instance_ids": [
                393
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 395,
            "example_instance_ids": [
                394
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a c)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 396,
            "example_instance_ids": [
                395
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(stack c b)\n"
        },
        {
            "instance_id": 397,
            "example_instance_ids": [
                396
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 398,
            "example_instance_ids": [
                397
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 399,
            "example_instance_ids": [
                398
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d c)\n(put-down d)\n(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 400,
            "example_instance_ids": [
                399
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b d)\n(pick-up c)\n(stack c a)\n(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 401,
            "example_instance_ids": [
                400
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(stack c d)\n"
        },
        {
            "instance_id": 402,
            "example_instance_ids": [
                401
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d b)\n(put-down d)\n(unstack b a)\n(stack b c)\n(pick-up a)\n(stack a d)\n(unstack b c)\n(stack b a)\n"
        },
        {
            "instance_id": 403,
            "example_instance_ids": [
                402
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 404,
            "example_instance_ids": [
                403
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 405,
            "example_instance_ids": [
                404
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d a)\n(put-down d)\n(pick-up b)\n(stack b a)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 406,
            "example_instance_ids": [
                405
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(unstack a d)\n(put-down a)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 407,
            "example_instance_ids": [
                406
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 408,
            "example_instance_ids": [
                407
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(put-down d)\n(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c d)\n(unstack a b)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 409,
            "example_instance_ids": [
                408
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c d)\n(unstack b a)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 410,
            "example_instance_ids": [
                409
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(pick-up d)\n(stack d b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 411,
            "example_instance_ids": [
                410
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the yellow block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(unstack b c)\n(stack b d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 412,
            "example_instance_ids": [
                411
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b d)\n(put-down b)\n(unstack d c)\n(put-down d)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 413,
            "example_instance_ids": [
                412
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the yellow block, the yellow block is on top of the orange block and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(stack a c)\n(unstack d b)\n(put-down d)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 414,
            "example_instance_ids": [
                413
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(stack c a)\n(unstack d b)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 415,
            "example_instance_ids": [
                414
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block and the blue block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(stack c d)\n(unstack a b)\n(put-down a)\n(unstack c d)\n(stack c a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 416,
            "example_instance_ids": [
                415
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(unstack c d)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 417,
            "example_instance_ids": [
                416
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(put-down c)\n(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 418,
            "example_instance_ids": [
                417
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the orange block is on top of the red block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(unstack d a)\n(stack d c)\n(pick-up b)\n(stack b a)\n(unstack d c)\n(stack d b)\n"
        },
        {
            "instance_id": 419,
            "example_instance_ids": [
                418
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 420,
            "example_instance_ids": [
                419
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(put-down c)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 421,
            "example_instance_ids": [
                420
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(stack d b)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 422,
            "example_instance_ids": [
                421
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up a)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 423,
            "example_instance_ids": [
                422
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(stack b d)\n(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 424,
            "example_instance_ids": [
                423
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d a)\n(unstack c b)\n(put-down c)\n(unstack d a)\n(stack d b)\n(pick-up c)\n(stack c d)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 425,
            "example_instance_ids": [
                424
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(stack c b)\n"
        },
        {
            "instance_id": 426,
            "example_instance_ids": [
                425
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(stack c a)\n"
        },
        {
            "instance_id": 427,
            "example_instance_ids": [
                426
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(stack c b)\n(unstack d a)\n(put-down d)\n(unstack c b)\n(stack c a)\n(pick-up d)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 428,
            "example_instance_ids": [
                427
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the red block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 429,
            "example_instance_ids": [
                428
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c b)\n(stack c d)\n(unstack b a)\n(put-down b)\n(unstack c d)\n(stack c b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 430,
            "example_instance_ids": [
                429
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block and the red block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(stack c a)\n"
        },
        {
            "instance_id": 431,
            "example_instance_ids": [
                430
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 432,
            "example_instance_ids": [
                431
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack b d)\n(stack b a)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 433,
            "example_instance_ids": [
                432
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d a)\n(stack d b)\n"
        },
        {
            "instance_id": 434,
            "example_instance_ids": [
                433
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the yellow block, the yellow block is on top of the red block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 435,
            "example_instance_ids": [
                434
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(put-down b)\n(unstack c d)\n(stack c b)\n(pick-up a)\n(stack a d)\n(unstack c b)\n(stack c a)\n"
        },
        {
            "instance_id": 436,
            "example_instance_ids": [
                435
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 437,
            "example_instance_ids": [
                436
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c d)\n(unstack a b)\n(put-down a)\n(pick-up b)\n(stack b c)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 438,
            "example_instance_ids": [
                437
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the orange block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the red block from on top of the blue block\nput down the red block\npick up the blue block\nstack the blue block on top of the orange block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c a)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 439,
            "example_instance_ids": [
                438
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n(pick-up a)\n(stack a d)\n"
        },
        {
            "instance_id": 440,
            "example_instance_ids": [
                439
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\npick up the red block\nstack the red block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 441,
            "example_instance_ids": [
                440
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b c)\n(unstack a d)\n(stack a b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 442,
            "example_instance_ids": [
                441
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the orange block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack c a)\n(put-down c)\n(unstack a b)\n(stack a c)\n(pick-up d)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 443,
            "example_instance_ids": [
                442
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack d c)\n(put-down d)\n(pick-up a)\n(stack a d)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 444,
            "example_instance_ids": [
                443
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the red block\nstack the red block on top of the yellow block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 445,
            "example_instance_ids": [
                444
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the orange block is on top of the yellow block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(put-down d)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 446,
            "example_instance_ids": [
                445
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the red block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nput down the yellow block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a e)\n(put-down a)\n(unstack e c)\n(put-down e)\n(unstack c b)\n(stack c a)\n(unstack b d)\n(put-down b)\n(pick-up d)\n(stack d e)\n(unstack c a)\n(stack c d)\n"
        },
        {
            "instance_id": 447,
            "example_instance_ids": [
                446
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block and the yellow block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the orange block\nput down the white block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the red block\nunstack the blue block from on top of the yellow block\nput down the blue block\npick up the yellow block\nstack the yellow block on top of the white block\nunstack the orange block from on top of the red block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the orange block is on top of the red block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a c)\n(unstack b e)\n(stack b d)\n(unstack a c)\n(stack a b)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 448,
            "example_instance_ids": [
                447
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the orange block is on top of the red block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the blue block, the blue block is on top of the yellow block and the orange block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the blue block from on top of the white block\nstack the blue block on top of the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the yellow block and the red block is on the table.\nMy goal is to have that the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e d)\n(put-down e)\n(unstack d c)\n(put-down d)\n(pick-up e)\n(stack e c)\n(pick-up d)\n(stack d e)\n"
        },
        {
            "instance_id": 449,
            "example_instance_ids": [
                448
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the yellow block and the red block is on the table.\nMy goal is to have that the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the white block\nstack the white block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(put-down a)\n(pick-up e)\n(stack e a)\n(unstack c d)\n(stack c e)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 450,
            "example_instance_ids": [
                449
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nput down the red block\npick up the white block\nstack the white block on top of the red block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the white block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a e)\n(unstack c d)\n(put-down c)\n(unstack a e)\n(stack a c)\n(unstack d b)\n(stack d a)\n(pick-up e)\n(stack e d)\n"
        },
        {
            "instance_id": 451,
            "example_instance_ids": [
                450
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the blue block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the white block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the red block from on top of the white block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up e)\n(stack e c)\n(unstack b a)\n(stack b e)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 452,
            "example_instance_ids": [
                451
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the white block\nstack the white block on top of the orange block\nunstack the blue block from on top of the red block\nstack the blue block on top of the white block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a e)\n(stack a d)\n(unstack e c)\n(stack e a)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b c)\n(unstack e a)\n(stack e b)\n(unstack a d)\n(stack a e)\n"
        },
        {
            "instance_id": 453,
            "example_instance_ids": [
                452
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the orange block and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the white block\nstack the red block on top of the yellow block\nunstack the white block from on top of the orange block\nstack the white block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the white block from on top of the red block\nstack the white block on top of the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e a)\n(put-down e)\n(unstack a d)\n(put-down a)\n(unstack d b)\n(stack d a)\n(unstack b c)\n(stack b e)\n(unstack d a)\n(stack d b)\n"
        },
        {
            "instance_id": 454,
            "example_instance_ids": [
                453
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the red block and the orange block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the red block\nput down the white block\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the white block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b c)\n(put-down b)\n(unstack c d)\n(put-down c)\n(unstack d e)\n(put-down d)\n(unstack e a)\n(stack e d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 455,
            "example_instance_ids": [
                454
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the red block is on the table.\nMy goal is to have that the red block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the white block from on top of the red block\nstack the white block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the white block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c e)\n(put-down c)\n(unstack e b)\n(stack e c)\n(unstack b a)\n(put-down b)\n(unstack e c)\n(stack e b)\n(unstack a d)\n(put-down a)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 456,
            "example_instance_ids": [
                455
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the red block, the orange block is on top of the white block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the white block\nput down the orange block\nunstack the white block from on top of the blue block\nstack the white block on top of the orange block\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the white block from on top of the orange block\nstack the white block on top of the blue block\nunstack the red block from on top of the yellow block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a e)\n(put-down a)\n(unstack e d)\n(stack e a)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 457,
            "example_instance_ids": [
                456
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the yellow block is on top of the blue block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the yellow block\nstack the white block on top of the red block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the white block, the red block is on the table, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d e)\n(stack d a)\n(pick-up b)\n(stack b e)\n(unstack d a)\n(stack d b)\n"
        },
        {
            "instance_id": 458,
            "example_instance_ids": [
                457
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the yellow block is on top of the white block, the red block is on the table, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the white block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the white block, the orange block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up e)\n(stack e d)\n(unstack b c)\n(stack b e)\n(unstack c a)\n(stack c b)\n(pick-up a)\n(stack a c)\n"
        },
        {
            "instance_id": 459,
            "example_instance_ids": [
                458
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the orange block, the orange block is on top of the red block, the red block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the white block, the orange block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the white block\nstack the white block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the white block\nunstack the orange block from on top of the red block\nstack the orange block on top of the blue block\npick up the red block\nstack the red block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e b)\n(put-down e)\n(unstack b a)\n(stack b e)\n(unstack a c)\n(put-down a)\n(unstack c d)\n(put-down c)\n(unstack b e)\n(stack b d)\n(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 460,
            "example_instance_ids": [
                459
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on top of the yellow block, the white block is on top of the blue block and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the blue block\nput down the white block\nunstack the blue block from on top of the red block\nstack the blue block on top of the white block\nunstack the red block from on top of the orange block\nput down the red block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the blue block from on top of the white block\nstack the blue block on top of the yellow block\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d e)\n(put-down d)\n(unstack a c)\n(stack a d)\n(unstack e b)\n(put-down e)\n(pick-up b)\n(stack b e)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 461,
            "example_instance_ids": [
                460
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the orange block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the red block from on top of the orange block\nstack the red block on top of the yellow block\nunstack the white block from on top of the blue block\nput down the white block\npick up the blue block\nstack the blue block on top of the white block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e d)\n(put-down e)\n(unstack d b)\n(stack d e)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 462,
            "example_instance_ids": [
                461
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the white block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e d)\n(put-down e)\n(unstack d a)\n(put-down d)\n(unstack a b)\n(stack a e)\n"
        },
        {
            "instance_id": 463,
            "example_instance_ids": [
                462
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the yellow block is on top of the red block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the blue block\nstack the red block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d e)\n(unstack c b)\n(put-down c)\n(unstack d e)\n(stack d b)\n(pick-up c)\n(stack c d)\n(unstack e a)\n(put-down e)\n(pick-up a)\n(stack a e)\n"
        },
        {
            "instance_id": 464,
            "example_instance_ids": [
                463
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the white block is on top of the red block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the white block\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the blue block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the white block from on top of the red block\nput down the white block\npick up the red block\nstack the red block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the white block, the orange block is on top of the red block, the white block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c a)\n(put-down c)\n(unstack a b)\n(put-down a)\n(unstack b e)\n(put-down b)\n(unstack e d)\n(put-down e)\n(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(pick-up b)\n(stack b c)\n(pick-up e)\n(stack e b)\n"
        },
        {
            "instance_id": 465,
            "example_instance_ids": [
                464
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the white block, the orange block is on top of the red block, the white block is on top of the yellow block and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the white block\nput down the blue block\nunstack the white block from on top of the yellow block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the orange block\npick up the white block\nstack the white block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c e)\n(unstack b a)\n(put-down b)\n(pick-up a)\n(stack a c)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 466,
            "example_instance_ids": [
                465
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the blue block is on top of the red block, the red block is on the table, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the white block\nunstack the blue block from on top of the red block\nput down the blue block\npick up the red block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up c)\n(stack c a)\n(unstack e b)\n(put-down e)\n(unstack b d)\n(stack b c)\n(pick-up d)\n(stack d e)\n(unstack b c)\n(stack b d)\n"
        },
        {
            "instance_id": 467,
            "example_instance_ids": [
                466
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the orange block\nstack the orange block on top of the red block\nunstack the white block from on top of the blue block\nput down the white block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d e)\n(put-down d)\n(unstack e b)\n(stack e a)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 468,
            "example_instance_ids": [
                467
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the white block, the white block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the white block from on top of the blue block\nstack the white block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack a e)\n(stack a d)\n(pick-up e)\n(stack e b)\n(pick-up c)\n(stack c e)\n"
        },
        {
            "instance_id": 469,
            "example_instance_ids": [
                468
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the orange block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the red block from on top of the white block\nstack the red block on top of the yellow block\npick up the white block\nstack the white block on top of the blue block\npick up the orange block\nstack the orange block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e c)\n(put-down e)\n(unstack c a)\n(put-down c)\n(unstack a d)\n(stack a c)\n(pick-up d)\n(stack d a)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 470,
            "example_instance_ids": [
                469
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the red block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the orange block\nput down the white block\nunstack the orange block from on top of the red block\nput down the orange block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the white block, the red block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(put-down b)\n(unstack d e)\n(stack d c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 471,
            "example_instance_ids": [
                470
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the yellow block, the orange block is on top of the red block, the yellow block is on top of the white block, the red block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nput down the blue block\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d a)\n(unstack c b)\n(stack c e)\n"
        },
        {
            "instance_id": 472,
            "example_instance_ids": [
                471
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the orange block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the white block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a c)\n(stack a b)\n(unstack c e)\n(stack c a)\n(unstack e d)\n(put-down e)\n(unstack c a)\n(stack c e)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 473,
            "example_instance_ids": [
                472
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the orange block, the orange block is on top of the white block, the white block is on top of the yellow block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the white block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the orange block\nstack the red block on top of the blue block\nunstack the orange block from on top of the white block\nstack the orange block on top of the red block\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the orange block from on top of the red block\nstack the orange block on top of the white block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the white block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e a)\n(put-down e)\n(unstack a d)\n(stack a e)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 474,
            "example_instance_ids": [
                473
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the yellow block is on top of the orange block, the white block is on top of the red block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the white block, the blue block is on top of the yellow block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the red block\nput down the white block\nunstack the red block from on top of the yellow block\nstack the red block on top of the white block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a b)\n(put-down a)\n(unstack b c)\n(stack b a)\n(unstack c e)\n(stack c b)\n(pick-up e)\n(stack e c)\n(pick-up d)\n(stack d e)\n"
        },
        {
            "instance_id": 475,
            "example_instance_ids": [
                474
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the blue block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the blue block\nput down the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the red block\nunstack the orange block from on top of the white block\nstack the orange block on top of the blue block\npick up the white block\nstack the white block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the blue block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d a)\n(pick-up c)\n(stack c d)\n(unstack e b)\n(stack e c)\n(pick-up b)\n(stack b e)\n"
        },
        {
            "instance_id": 476,
            "example_instance_ids": [
                475
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the blue block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the red block\npick up the orange block\nstack the orange block on top of the yellow block\nunstack the white block from on top of the blue block\nstack the white block on top of the orange block\npick up the blue block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the red block, the yellow block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b e)\n(put-down b)\n(unstack c d)\n(put-down c)\n(unstack d a)\n(stack d b)\n(pick-up e)\n(stack e d)\n(pick-up a)\n(stack a e)\n(pick-up c)\n(stack c a)\n"
        },
        {
            "instance_id": 477,
            "example_instance_ids": [
                476
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the hand is empty, the blue block is on top of the white block, the orange block is on top of the yellow block, the yellow block is on top of the red block, the red block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the red block, the yellow block is on top of the blue block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the white block\nput down the blue block\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\npick up the white block\nstack the white block on top of the yellow block\npick up the red block\nstack the red block on top of the white block\npick up the orange block\nstack the orange block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e b)\n(stack e a)\n(pick-up c)\n(stack c e)\n"
        },
        {
            "instance_id": 478,
            "example_instance_ids": [
                477
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block, the orange block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the blue block\nstack the white block on top of the red block\npick up the orange block\nstack the orange block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c d)\n(put-down c)\n(unstack d e)\n(put-down d)\n(unstack e a)\n(stack e c)\n(unstack a b)\n(stack a d)\n(unstack e c)\n(stack e a)\n(pick-up b)\n(stack b e)\n"
        },
        {
            "instance_id": 479,
            "example_instance_ids": [
                478
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the hand is empty, the red block is on top of the blue block, the orange block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the red block and the blue block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the white block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the yellow block\nput down the orange block\nunstack the yellow block from on top of the white block\nput down the yellow block\nunstack the white block from on top of the red block\nstack the white block on top of the orange block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the white block from on top of the orange block\nstack the white block on top of the red block\npick up the blue block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(put-down d)\n(unstack a e)\n(stack a d)\n(pick-up e)\n(stack e c)\n"
        },
        {
            "instance_id": 480,
            "example_instance_ids": [
                479
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the blue block is on the table, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the yellow block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the orange block\nput down the yellow block\nunstack the red block from on top of the white block\nstack the red block on top of the yellow block\npick up the white block\nstack the white block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the white block is on top of the blue block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a e)\n(put-down a)\n(unstack e b)\n(stack e a)\n(unstack b c)\n(stack b d)\n"
        },
        {
            "instance_id": 481,
            "example_instance_ids": [
                480
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the white block is on top of the blue block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the blue block\nstack the white block on top of the red block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(stack d e)\n(unstack a b)\n(stack a d)\n(unstack b c)\n(put-down b)\n(unstack a d)\n(stack a c)\n(unstack d e)\n(stack d a)\n(pick-up e)\n(stack e b)\n"
        },
        {
            "instance_id": 482,
            "example_instance_ids": [
                481
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the blue block, the blue block is on top of the orange block, the yellow block is on top of the red block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the yellow block is on top of the red block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the white block\nunstack the red block from on top of the blue block\nstack the red block on top of the yellow block\nunstack the blue block from on top of the orange block\nput down the blue block\nunstack the red block from on top of the yellow block\nstack the red block on top of the orange block\nunstack the yellow block from on top of the white block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack e c)\n(put-down e)\n(pick-up d)\n(stack d e)\n(unstack c b)\n(put-down c)\n(pick-up b)\n(stack b d)\n"
        },
        {
            "instance_id": 483,
            "example_instance_ids": [
                482
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the white block is clear, the hand is empty, the red block is on top of the yellow block, the orange block is on top of the blue block, the white block is on top of the orange block, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the white block from on top of the orange block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the white block\nunstack the orange block from on top of the blue block\nput down the orange block\npick up the blue block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(put-down b)\n(unstack a c)\n(put-down a)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 484,
            "example_instance_ids": [
                483
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the red block is on top of the orange block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nput down the blue block\nunstack the red block from on top of the orange block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a e)\n(put-down a)\n(unstack d c)\n(stack d a)\n(pick-up e)\n(stack e d)\n(unstack c b)\n(stack c e)\n(pick-up b)\n(stack b c)\n"
        },
        {
            "instance_id": 485,
            "example_instance_ids": [
                484
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the orange block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the yellow block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the white block\npick up the blue block\nstack the blue block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the white block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the yellow block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b e)\n(put-down b)\n(unstack e c)\n(stack e b)\n(pick-up a)\n(stack a e)\n(pick-up d)\n(stack d c)\n"
        },
        {
            "instance_id": 486,
            "example_instance_ids": [
                485
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the white block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the yellow block is on top of the orange block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the white block\nput down the blue block\nunstack the white block from on top of the orange block\nstack the white block on top of the blue block\npick up the red block\nstack the red block on top of the white block\npick up the yellow block\nstack the yellow block on top of the orange block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(stack d c)\n(unstack a e)\n(put-down a)\n(unstack d c)\n(stack d a)\n(unstack c b)\n(stack c d)\n(pick-up b)\n(stack b e)\n"
        },
        {
            "instance_id": 487,
            "example_instance_ids": [
                486
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the orange block is on top of the blue block, the yellow block is on top of the red block, the blue block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the orange block\nunstack the red block from on top of the white block\nput down the red block\nunstack the yellow block from on top of the orange block\nstack the yellow block on top of the red block\nunstack the orange block from on top of the blue block\nstack the orange block on top of the yellow block\npick up the blue block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the yellow block is on top of the blue block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a d)\n(put-down a)\n(unstack d b)\n(stack d a)\n(unstack b e)\n(stack b d)\n"
        },
        {
            "instance_id": 488,
            "example_instance_ids": [
                487
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the red block is on top of the yellow block, the blue block is on top of the white block, the yellow block is on top of the blue block, the orange block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the yellow block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the yellow block\nput down the red block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the white block\nstack the blue block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the white block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block, the yellow block is on top of the orange block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c e)\n(stack c a)\n(unstack e d)\n(put-down e)\n(unstack d b)\n(stack d c)\n(pick-up e)\n(stack e d)\n"
        },
        {
            "instance_id": 489,
            "example_instance_ids": [
                488
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the hand is empty, the orange block is on top of the white block, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the red block, the yellow block is on top of the orange block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the white block\nstack the orange block on top of the red block\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the orange block\npick up the white block\nstack the white block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the white block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a e)\n(put-down a)\n(unstack e c)\n(put-down e)\n(unstack b d)\n(stack b e)\n(pick-up c)\n(stack c a)\n(pick-up d)\n(stack d b)\n"
        },
        {
            "instance_id": 490,
            "example_instance_ids": [
                489
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the yellow block, the white block is on top of the orange block, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the white block, the orange block is on top of the red block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nput down the red block\nunstack the white block from on top of the orange block\nput down the white block\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the white block\npick up the orange block\nstack the orange block on top of the red block\npick up the yellow block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the orange block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e c)\n(put-down e)\n(pick-up d)\n(stack d c)\n(pick-up a)\n(stack a d)\n(pick-up b)\n(stack b a)\n"
        },
        {
            "instance_id": 491,
            "example_instance_ids": [
                490
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the yellow block is clear, the white block is clear, the hand is empty, the white block is on top of the orange block, the red block is on the table, the blue block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the yellow block, the blue block is on top of the red block and the yellow block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the orange block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the red block\nstack the red block on top of the yellow block\npick up the blue block\nstack the blue block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack a e)\n(stack a b)\n(unstack e d)\n(put-down e)\n(unstack d c)\n(put-down d)\n(pick-up c)\n(stack c a)\n(pick-up e)\n(stack e c)\n(pick-up d)\n(stack d e)\n"
        },
        {
            "instance_id": 492,
            "example_instance_ids": [
                491
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the red block is on top of the white block, the yellow block is on top of the orange block, the white block is on top of the yellow block, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block, the orange block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the orange block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the red block from on top of the white block\nstack the red block on top of the blue block\nunstack the white block from on top of the yellow block\nput down the white block\nunstack the yellow block from on top of the orange block\nput down the yellow block\npick up the orange block\nstack the orange block on top of the red block\npick up the white block\nstack the white block on top of the orange block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack c b)\n(put-down c)\n(unstack d a)\n(put-down d)\n(pick-up a)\n(stack a c)\n(pick-up b)\n(stack b a)\n(pick-up e)\n(stack e b)\n(pick-up d)\n(stack d e)\n"
        },
        {
            "instance_id": 493,
            "example_instance_ids": [
                492
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the yellow block is on top of the red block, the red block is on the table, the blue block is on the table and the white block is on the table.\nMy goal is to have that the red block is on top of the orange block, the blue block is on top of the red block, the yellow block is on top of the white block and the white block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the orange block from on top of the blue block\nput down the orange block\nunstack the yellow block from on top of the red block\nput down the yellow block\npick up the red block\nstack the red block on top of the orange block\npick up the blue block\nstack the blue block on top of the red block\npick up the white block\nstack the white block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b d)\n(stack b a)\n(unstack e c)\n(put-down e)\n(pick-up d)\n(stack d e)\n(pick-up c)\n(stack c d)\n"
        },
        {
            "instance_id": 494,
            "example_instance_ids": [
                493
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the white block is clear, the hand is empty, the blue block is on top of the yellow block, the white block is on top of the orange block, the red block is on the table, the orange block is on the table and the yellow block is on the table.\nMy goal is to have that the blue block is on top of the red block, the orange block is on top of the yellow block and the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the yellow block\nstack the blue block on top of the red block\nunstack the white block from on top of the orange block\nput down the white block\npick up the yellow block\nstack the yellow block on top of the white block\npick up the orange block\nstack the orange block on top of the yellow block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up d)\n(stack d c)\n(pick-up e)\n(stack e a)\n"
        },
        {
            "instance_id": 495,
            "example_instance_ids": [
                494
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the yellow block is clear, the white block is clear, the hand is empty, the orange block is on top of the blue block, the red block is on the table, the blue block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the yellow block is on top of the orange block and the white block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the yellow block\nstack the yellow block on top of the orange block\npick up the white block\nstack the white block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(pick-up a)\n(stack a b)\n"
        },
        {
            "instance_id": 496,
            "example_instance_ids": [
                495
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the blue block is clear, the hand is empty, the blue block is on top of the yellow block, the yellow block is on top of the white block, the white block is on top of the orange block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the red block is on top of the blue block and the blue block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\npick up the red block\nstack the red block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e d)\n(put-down e)\n(pick-up c)\n(stack c e)\n(unstack d b)\n(stack d a)\n(pick-up b)\n(stack b c)\n(unstack d a)\n(stack d b)\n"
        },
        {
            "instance_id": 497,
            "example_instance_ids": [
                496
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the yellow block is on top of the blue block, the white block is on top of the yellow block, the red block is on the table, the blue block is on the table and the orange block is on the table.\nMy goal is to have that the blue block is on top of the orange block, the orange block is on top of the white block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the yellow block\nput down the white block\npick up the orange block\nstack the orange block on top of the white block\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\npick up the blue block\nstack the blue block on top of the orange block\nunstack the yellow block from on top of the red block\nstack the yellow block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack b a)\n(stack b c)\n(unstack a e)\n(put-down a)\n(pick-up d)\n(stack d a)\n(pick-up e)\n(stack e d)\n(unstack b c)\n(stack b e)\n"
        },
        {
            "instance_id": 498,
            "example_instance_ids": [
                497
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the orange block is clear, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the red block, the orange block is on the table, the yellow block is on the table and the white block is on the table.\nMy goal is to have that the blue block is on top of the white block, the yellow block is on top of the red block and the white block is on top of the yellow block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the blue block from on top of the red block\nstack the blue block on top of the orange block\nunstack the red block from on top of the white block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the red block\npick up the white block\nstack the white block on top of the yellow block\nunstack the blue block from on top of the orange block\nstack the blue block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the orange block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack e b)\n(put-down e)\n(pick-up a)\n(stack a e)\n(unstack c d)\n(stack c b)\n(pick-up d)\n(stack d a)\n"
        },
        {
            "instance_id": 499,
            "example_instance_ids": [
                498
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the orange block is clear, the white block is clear, the hand is empty, the orange block is on top of the yellow block, the white block is on top of the blue block, the red block is on the table, the blue block is on the table and the yellow block is on the table.\nMy goal is to have that the red block is on top of the white block, the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the white block from on top of the blue block\nput down the white block\npick up the red block\nstack the red block on top of the white block\nunstack the orange block from on top of the yellow block\nstack the orange block on top of the blue block\npick up the yellow block\nstack the yellow block on top of the red block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the yellow block is on top of the red block, the white block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d a)\n(put-down d)\n(unstack a e)\n(put-down a)\n(pick-up d)\n(stack d e)\n"
        },
        {
            "instance_id": 500,
            "example_instance_ids": [
                499
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the yellow block is clear, the hand is empty, the red block is on top of the white block, the blue block is on top of the orange block, the yellow block is on top of the red block, the white block is on top of the blue block and the orange block is on the table.\nMy goal is to have that the yellow block is on top of the white block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the red block\nput down the yellow block\nunstack the red block from on top of the white block\nput down the red block\npick up the yellow block\nstack the yellow block on top of the white block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d b)\n(stack d a)\n(unstack b c)\n(put-down b)\n(pick-up c)\n(stack c b)\n"
        },
        {
            "instance_id": 501,
            "example_instance_ids": [
                500
            ],
            "query": "### **Block Stacking Environment**\n\nYou are managing a set of blocks that can be arranged into stacks on a table. Below are the available actions and the rules governing them.\n\n---\n\n#### **Available Actions**\n\n1. **Pick Up a Block**\n   - **Description:** Grasp a single block from the table.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block is **on the table**.\n     - The block is **clear** (no blocks are stacked on top of it).\n\n2. **Unstack a Block**\n   - **Description:** Remove the top block from an existing stack.\n   - **Conditions:**\n     - Your hand is empty.\n     - The block to be unstacked is **clear**.\n     - The block is indeed the **topmost** block on its current stack.\n\n3. **Put Down a Block**\n   - **Description:** Place the block you are holding onto the table.\n   - **Conditions:**\n     - You are **holding** a block.\n   - **Post-Action Effect:**\n     - Your hand becomes empty.\n\n4. **Stack a Block**\n   - **Description:** Place the block you are holding on top of another **clear** block.\n   - **Conditions:**\n     - You are **holding** a block.\n     - The target block you are stacking onto is **clear**.\n   - **Post-Action Effects:**\n     - Your hand becomes empty.\n     - The target block is now **not clear** (since another block is stacked on it).\n\n---\n\n#### **Rules and Restrictions**\n\n- **Single Block Manipulation:** You can only pick up or unstack **one block at a time**.\n  \n- **Hand Capacity:** Your hand can hold **only one block** at any given moment.\n  \n- **Clear Block Definition:**\n  - A block is **clear** if:\n    - **No other blocks** are stacked on top of it.\n    - It is **not being held** by your hand.\n  \n- **Action Preconditions:**\n  - **Pick Up:**\n    - The block must be **on the table** and **clear**.\n  - **Unstack:**\n    - The block must be the **top block** of its stack and **clear**.\n  \n- **Post-Action Hand State:**\n  - After performing a **put down** or **stack** action, your hand becomes **empty**.\n\n- **Stacking Effect:**\n  - Once you **stack** a block onto another, the **base block** is **no longer clear**.\n\n---\n\n### **Summary of Workflow**\n\n1. **Starting Condition:** All blocks are either on the table or stacked. Ensure your hand is empty before initiating any action.\n\n2. **Picking Up:**\n   - Identify a **clear** block on the table.\n   - **Pick up** the block if your hand is empty.\n\n3. **Unstacking:**\n   - Identify a **clear** top block from a stack.\n   - **Unstack** the block if your hand is empty.\n\n4. **Placing a Block:**\n   - **Put down** the held block onto the table, making your hand empty.\n   - Or **stack** the held block onto another **clear** block, making your hand empty and updating the status of the base block.\n\n---\n\n[STATEMENT]\nAs initial conditions I have that, the red block is clear, the yellow block is clear, the hand is empty, the blue block is on top of the orange block, the yellow block is on top of the blue block, the red block is on the table and the orange block is on the table.\nMy goal is to have that the orange block is on top of the blue block and the yellow block is on top of the red block.\n\nMy plan is as follows:\n\n[PLAN]\nunstack the yellow block from on top of the blue block\nstack the yellow block on top of the red block\nunstack the blue block from on top of the orange block\nput down the blue block\npick up the orange block\nstack the orange block on top of the blue block\n[PLAN END]\n\n[STATEMENT]\nAs initial conditions I have that, the blue block is clear, the yellow block is clear, the hand is empty, the orange block is on top of the red block, the yellow block is on top of the orange block, the red block is on the table and the blue block is on the table.\nMy goal is to have that the orange block is on top of the yellow block and the yellow block is on top of the blue block.\n\nMy plan is as follows:\n\n[PLAN]",
            "ground_truth_plan": "(unstack d c)\n(stack d b)\n(unstack c a)\n(stack c d)\n"
        }
    ]
}